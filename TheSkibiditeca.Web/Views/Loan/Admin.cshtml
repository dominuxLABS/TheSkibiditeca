@using TheSkibiditeca.Web.Models.Entities
@using TheSkibiditeca.Web.Models.Enums

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="book-container">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1 class="mb-0"><i class="fas fa-clipboard-list me-2"></i>Todos los préstamos</h1>
                </div>
                <hr />
                @if(ViewBag.Loans == null || ViewBag.Loans.Count == 0) {
                    <div class="text-center py-5">
                        <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No hay préstamos registrados</h4>
                        <p class="text-muted">No se encontraron préstamos en el sistema.</p>
                    </div>
                } else {
                    <div class="table-responsive">
                        <table class="table table-dark table-hover">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-hashtag me-1"></i> ID</th>
                                    <th><i class="fas fa-info-circle me-1"></i> Estado</th>
                                    <th><i class="fas fa-cog me-1"></i> Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach(Loan loan in ViewBag.Loans) {
                                    <tr>
                                        <td>#@loan.LoanId</td>
                                        <td>
                                            @switch(loan.Status) {
                                                case LoanStatusType.Pending:
                                                    <span class="badge bg-success">Pendiente</span>
                                                    break;
                                                case LoanStatusType.Active:
                                                    <span class="badge bg-success">Activo</span>
                                                    break;
                                                case LoanStatusType.Returned:
                                                    <span class="badge bg-info">Devuelto</span>
                                                    break;
                                                case LoanStatusType.Overdue:
                                                    <span class="badge bg-danger">Vencido</span>
                                                    break;
                                                case LoanStatusType.Lost:
                                                    <span class="badge bg-secondary">Perdido</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-warning">@loan.Status</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            <a href="@Url.Action("Edit", "Loan", new { loanid = loan.LoanId })" class="btn btn-sm btn-primary">
                                                <i class="fas fa-eye me-1"></i> Editar
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
