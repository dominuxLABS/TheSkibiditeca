# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# All files
[*]
indent_style = space
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
charset = utf-8

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.{json,jsonc}]
indent_size = 2

# Web files
[*.{htm,html,js,ts,css,scss,less}]
indent_size = 2

# Razor files
[*.{razor,cshtml}]
indent_size = 4

# Markdown files
[*.md]
trim_trailing_whitespace = false

# C# naming conventions
[*.cs]
# PascalCase for classes, methods, properties
dotnet_naming_rule.classes_should_be_pascal_case.severity = error
dotnet_naming_rule.classes_should_be_pascal_case.symbols = classes
dotnet_naming_rule.classes_should_be_pascal_case.style = pascal_case

dotnet_naming_symbols.classes.applicable_kinds = class
dotnet_naming_symbols.classes.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_style.pascal_case.capitalization = pascal_case

# Controller naming
dotnet_naming_rule.controllers_should_end_with_controller.severity = error
dotnet_naming_rule.controllers_should_end_with_controller.symbols = controllers
dotnet_naming_rule.controllers_should_end_with_controller.style = controller_style

dotnet_naming_symbols.controllers.applicable_kinds = class
dotnet_naming_symbols.controllers.required_modifiers = 
dotnet_naming_symbols.controllers.applicable_accessibilities = *
dotnet_naming_symbols.controllers.name_should_match = *Controller

dotnet_naming_style.controller_style.required_suffix = Controller
dotnet_naming_style.controller_style.capitalization = pascal_case
